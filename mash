#!/usr/bin/env bash
set -ueo pipefail
dateTime(){ date -u '+%Y-%m-%dT%H:%M:%SZ'; }
rundir=$(cd -P -- "$(dirname -- "$0")" && printf '%s\n' "$(pwd -P)")
cd "$rundir"
# {make.sh user}


CONTAINER_NAME="debian"
IMAGE_NAME="${CONTAINER_NAME}"
IMAGE_REPO="docker.io/${IMAGE_NAME}"
IMAGE_TAG="11"


# Examples

run:task:name () {
  echo "I am name"
}
run:other(){
  printf "I'm %s\n" "$*"
}


# Common

run:watch () {
  nodemon -w mash -w . -e sh,ts,json -i .git -x "$@"
} 

run:docker () {
  docker run \
   --interactive --tty \
   --env DEBUG=true \
   --rm \
   --name "${CONTAINER_NAME}" \
   "${IMAGE_REPO}:${IMAGE_TAG}" \
   "$@"
}

run:whatever:seconds(){
  DATE=$(date +%s)
  echo "$DATE" "$@"
}


# Project

# dump just the header
run:mash:header () {
  set +x #output based
  grep -B100 -e '{make\.sh user}' mash || (printf "ERROR" >/dev/stderr; exit 1)
}

# dump just the footer
run:mash:footer () {
  set +x # output based
  grep -A100 -e '{make\.sh common}' mash || (printf "ERROR" >dev/stderr; exit 1)
}

run:mash:dump(){
  run:mash:header
  echo 
  run:mash:footer
}
run:dump(){
  run:mash:dump
}


# {make.sh common}
run:completion:words(){
  declare -F | while read -r line; do
    [[ "${line:11:4}" == "run:" ]] && [[ "${line:11:15}" != "run:completion:" ]] && echo "${line:15}"
  done
}
run:help(){
  set +x
  echo "Commands:"
  run:completion:words | while read -r line; do printf "  %s\n" "${line}"; done
  exit 1
}
[ -z "${1:-}" ] && run:help
cmd=$1
shift
[[ "$cmd" == completion:* ]] || set -x
run:"$cmd" "$@"
